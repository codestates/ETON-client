[{"/home/ddubbu/git/ETON/1. ETON-client/src/index.js":"1","/home/ddubbu/git/ETON/1. ETON-client/src/reportWebVitals.js":"2","/home/ddubbu/git/ETON/1. ETON-client/src/App.js":"3","/home/ddubbu/git/ETON/1. ETON-client/src/pages/SignIn.js":"4","/home/ddubbu/git/ETON/1. ETON-client/src/pages/Intro.js":"5","/home/ddubbu/git/ETON/1. ETON-client/src/pages/SignUp.js":"6","/home/ddubbu/git/ETON/1. ETON-client/src/components/common/Header.js":"7","/home/ddubbu/git/ETON/1. ETON-client/src/components/common/Logo.js":"8","/home/ddubbu/git/ETON/1. ETON-client/src/pages/Main.js":"9","/home/ddubbu/git/ETON/1. ETON-client/src/components/modal/logoutDropDown.js":"10","/home/ddubbu/git/ETON/1. ETON-client/src/components/mainPage/profile.js":"11","/home/ddubbu/git/ETON/1. ETON-client/src/components/mainPage/taskThumbNail.js":"12","/home/ddubbu/git/ETON/1. ETON-client/src/components/modal/userInfoEdit.js":"13","/home/ddubbu/git/ETON/1. ETON-client/src/pages/Board.js":"14","/home/ddubbu/git/ETON/1. ETON-client/src/components/board/ProgressList.js":"15","/home/ddubbu/git/ETON/1. ETON-client/src/helper/drag-n-drop.js":"16","/home/ddubbu/git/ETON/1. ETON-client/src/helper/sortObject.js":"17","/home/ddubbu/git/ETON/1. ETON-client/src/components/board/TaskList.js":"18","/home/ddubbu/git/ETON/1. ETON-client/src/helper/eventHandler.js":"19","/home/ddubbu/git/ETON/1. ETON-client/src/components/modal/MemberDropDown.js":"20","/home/ddubbu/git/ETON/1. ETON-client/src/components/modal/PrgMenuDropDown.js":"21","/home/ddubbu/git/ETON/1. ETON-client/src/components/modal/TaskMenuDropDown.js":"22","/home/ddubbu/git/ETON/1. ETON-client/src/components/modal/TaskInfoEdit.js":"23","/home/ddubbu/git/ETON/1. ETON-client/src/components/mainPage/boardThumbNail.js":"24","/home/ddubbu/git/ETON/1. ETON-client/src/helper/axiosRequest.js":"25"},{"size":594,"mtime":1612438284256,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1612316892328,"results":"28","hashOfConfig":"27"},{"size":2217,"mtime":1613029976725,"results":"29","hashOfConfig":"27"},{"size":2380,"mtime":1613023813164,"results":"30","hashOfConfig":"27"},{"size":1952,"mtime":1612491351756,"results":"31","hashOfConfig":"27"},{"size":19717,"mtime":1613023813164,"results":"32","hashOfConfig":"27"},{"size":1488,"mtime":1613023813160,"results":"33","hashOfConfig":"27"},{"size":280,"mtime":1613023813160,"results":"34","hashOfConfig":"27"},{"size":10656,"mtime":1613023813164,"results":"35","hashOfConfig":"27"},{"size":1402,"mtime":1613023813160,"results":"36","hashOfConfig":"27"},{"size":1083,"mtime":1612834451704,"results":"37","hashOfConfig":"27"},{"size":681,"mtime":1613023813160,"results":"38","hashOfConfig":"27"},{"size":1787,"mtime":1613023813160,"results":"39","hashOfConfig":"27"},{"size":6486,"mtime":1613023813160,"results":"40","hashOfConfig":"27"},{"size":4775,"mtime":1613023813160,"results":"41","hashOfConfig":"27"},{"size":7991,"mtime":1613023813160,"results":"42","hashOfConfig":"27"},{"size":309,"mtime":1612833631715,"results":"43","hashOfConfig":"27"},{"size":1176,"mtime":1613023813160,"results":"44","hashOfConfig":"27"},{"size":9979,"mtime":1613023813160,"results":"45","hashOfConfig":"27"},{"size":474,"mtime":1613023813160,"results":"46","hashOfConfig":"27"},{"size":405,"mtime":1613023813160,"results":"47","hashOfConfig":"27"},{"size":481,"mtime":1613023813160,"results":"48","hashOfConfig":"27"},{"size":1433,"mtime":1613023813160,"results":"49","hashOfConfig":"27"},{"size":416,"mtime":1613023813160,"results":"50","hashOfConfig":"27"},{"size":995,"mtime":1613029734242,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"re4l63",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":2,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ddubbu/git/ETON/1. ETON-client/src/index.js",[],["118","119"],"/home/ddubbu/git/ETON/1. ETON-client/src/reportWebVitals.js",[],"/home/ddubbu/git/ETON/1. ETON-client/src/App.js",["120","121","122","123","124","125","126","127"],"/home/ddubbu/git/ETON/1. ETON-client/src/pages/SignIn.js",[],"/home/ddubbu/git/ETON/1. ETON-client/src/pages/Intro.js",["128","129"],"import React, { useState } from 'react'; //, { useState } \nimport '../styles/intro.css';\n\nconst Intro = () => {\n  const initAd = [\n    { \n      title: 'Thanks for using ETON.',\n      content: 'You’re all logged out. So now what?',\n      style: {\n        background: 'white'\n      }\n    },\n    {\n      title: 'Using a Shared Computer?',\n      content: `We've saved some of your preferences for the next time you log in, but if you'd like you can clear those now.`,\n      style: {\n        background: '#FDFAE5'\n      }\n    },\n    {\n      title: 'Do you have the apps?',\n      img: '/home-devices.png',\n      content : `We’ve got apps for iPhone, iPad, Android phones, tablets, and watches. You probably have one of those.`,\n      style: {\n        background: '#BCD9EA'\n      }\n    }, {\n      title: 'Follow us',\n      content: `…on the Trello Blog, Twitter, and Facebook.\n      We post all kinds of tips and updates, but not an annoying amount`,\n      style: {\n        background: 'white'\n      }\n    }, {\n      title: `Share Trello to get free Trello Gold.`,\n      img: '/favicon.ico',\n      content: `That’s right. For every member you get to sign up, you’ll get a free month of Trello Gold, up to 12 months. With Trello Gold you get three Power-Ups per board, custom backgrounds, stickers and emoji, 250MB attachments, and saved searches.\n      Help us spread the word and get some free Gold.`,\n      style: {\n        background: '#F5EA92'\n      }\n    }\n  ];\n\n  return (\n    <section className=\"ad-container\">\n      {\n        initAd.map((ele, idx) =>{\n          return (\n            <article className=\"ad-item\" key={idx} style={ele.style}> \n              { ele.img ? <img src={ ele.img } className=\"ad-img\" ></img> : '' }\n              <h1 className=\"ad-title\"> {ele.title} </h1>\n              <p className=\"ad-content\"> {ele.content} </p>\n            </article>\n          )\n        })\n      }\n    </section>\n  )\n}\n\nexport default Intro; \n\n","/home/ddubbu/git/ETON/1. ETON-client/src/pages/SignUp.js",["130","131","132","133","134","135"],"import React, { useEffect, useState } from 'react';\nimport '../styles/signUp.css'\nimport axios from 'axios';\nimport Logo from '../components/common/Logo';\n\nconst SignUp = (props) => {\n\n    const [email, setEmail] = useState('');\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordCheck, setPasswordCheck] = useState('');\n\n    const [validEmail, setValidEmail] = useState(true);\n    const [validName, setValidName] = useState(true);\n    const [validPassword, setValidPassword] = useState(true);\n    const [validPasswordCheck, setValidPasswordCheck] = useState(true);\n\n    const [gitHubAccessToken, setGitHubAccessToken] = useState('');\n\n    // 에러종류#############################\n\n    //eamil\n    const [emailLengthCheck, setEmailLengthCheck] = useState(true);    //길이\n    const [emailScriptCheck, setEmailScriptCheck] = useState(true);    //스크립트 체크\n    const [emailFormCheck, setEmailFormCheck] = useState(true);\n    const [doEmailDuplicateCheck, setDoEmailDuplicateCheck] = useState(false);  //이메일 중복체크 했는지\n    const [emailDuplicateCheck, setEmailDuplicateCheck] = useState(true);   //이메일 중복체크\n\n    //name\n    const [nameLengthCheck, setNameLengthCheck] = useState(true);      //길이\n    const [nameScriptCheck, setNameScriptCheck] = useState(true);      //스크립트 체크\n\n    //비밀번호\n    const [passwordLengthCheck, setPasswordLengthCheck] = useState(true);   //길이\n    const [passwordRegCheck, setPasswordRegCheck]  = useState(true)  //8글자이상, 하나이상의 숫자, 하나이상의 문자, 하나이상의 특수문자 들어갔는지\n\n\n    //비밀번호 체크\n    const [samePasswordCheck, setSamePasswordCheck] = useState(true);       //비밀번호와 같은지\n    const [passwordCheckLengthCheck, setPasswordCheckLengthCheck] = useState(true); //비밀번호체크 한글자이상은 입력해야함.\n\n    //duplicateErrorMessage //임시임. 나중에 고치자 useEffect Async더 공부해야함\n    let duplicateErrorMessage = false;\n    \n    //메소드\n    const handleEmail = (e) => {\n        setEmail(e.target.value);\n\n        //길이체크\n        checkEmailLength(e.target.value.length);\n        //스크립트 체크\n        checkEmailScript(e.target.value);\n\n        //이메일 형식 체크\n        checkEmailForm(e.target.value);\n\n        //이메일 중복 체크\n        // checkEmailDuplicate(e.target.value);\n\n        //전체 밸리드 인지\n        // if(emailLengthCheck && emailScriptCheck && emailFormCheck){\n        //     setValidEmail(true);\n        // }else{\n        //     setValidEmail(false);\n        // }\n\n        //리액트 훅스 스테이트가 바로 반영이 안되는 것 같아서 위의 주석처리된 메서드를 이렇게 바꿈. 나중에 스테이트를 쓸 수 있는 방향으로\n        //리팩토링 할 수 있으면 리팩토링 ㄱㄱ. 밑에 메서드들도 전부 마찬가지.\n        if(checkEmailLength(e.target.value.length) && checkEmailScript(e.target.value) && checkEmailForm(e.target.value)){\n            setValidEmail(true);\n        }else{\n            setValidEmail(false);\n        }\n\n    }\n\n    const handleName = (e) => {\n        setName(e.target.value);\n\n        checkNameLength(e.target.value.length);\n\n        checkNameScript(e.target.value);\n\n        if(checkNameLength(e.target.value.length) && checkNameScript(e.target.value)){\n            setValidName(true);\n        }else{\n            setValidName(false);\n        }\n    }\n\n    const handlePassword = (e) => {\n        setPassword(e.target.value);\n        \n        checkPasswordLength(e.target.value.length);\n\n        checkPasswordReg(e.target.value);\n\n        if(checkPasswordLength(e.target.value.length) && checkPasswordReg(e.target.value)){\n            setValidPassword(true);\n        }else{\n            setValidPassword(false);\n        }      \n\n        //비밀번호 체크를 먼저 입력하고 비밀번호를 입력할 경우, 같은지 아닌지를 체크해줘야 한다.\n        checkSamePassword(e.target.value, passwordCheck);\n\n        if(checkSamePassword(e.target.value, passwordCheck) && checkPasswordCheckLength(e.target.value.length)){\n            setValidPasswordCheck(true);\n        }else{\n            setValidPasswordCheck(false);\n        }\n    }\n\n    const handlePasswordCheck = (e) => {\n        setPasswordCheck(e.target.value);\n\n        checkSamePassword(e.target.value, password);\n\n        checkPasswordCheckLength(e.target.value.length);\n\n        if(checkSamePassword(e.target.value, password) && checkPasswordCheckLength(e.target.value.length)){\n            setValidPasswordCheck(true);\n        }else{\n            setValidPasswordCheck(false);\n        }\n    }\n\n    ///////////////////////////////// 공통메서드\n    const lengthInvalidCheck = (target, min, max) => {\n        if(target < min || target > max){\n            return false;\n        }\n        return true;\n    }\n\n    const regCheck = (target, reg) => {\n        if(reg.test(target)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n    ////////////////////////////////개별 유효성 검사\n    const checkEmailLength = (target) => {\n        if(lengthInvalidCheck(target, 5, 20)){\n            setEmailLengthCheck(true);\n            return true;\n        }else{\n            setEmailLengthCheck(false);\n            return false;\n        }\n    }\n    \n    const checkEmailScript = (target) => {\n        const scriptCheck = /<(|\\/|[^\\/>][^>]+|\\/[^>][^>]+)>/;\n        if(!regCheck(target, scriptCheck)){\n            setEmailScriptCheck(true);\n            return true;\n        }else{\n            setEmailScriptCheck(false);\n            return false;\n        }\n    }\n\n    const checkEmailForm = (target) => {\n        const emailCheck = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n        if(regCheck(target, emailCheck)){\n            setEmailFormCheck(true);\n            return true;\n        }else{\n            setEmailFormCheck(false);\n            return false;\n        }\n    }\n\n    const checkEmailDuplicate = (data) => {\n        if(checkEmailLength(email)&&checkEmailForm(email)&&checkEmailScript(email)){\n            setDoEmailDuplicateCheck(true);\n            // axios.post('https://localhost:4000/users/signup/email',{\n            axios.post('https://geteton.ga/users/signup/email',{\n                email \n            })\n            .then(res => {\n                console.log(\"정상\");\n                setEmailDuplicateCheck(true);\n                duplicateErrorMessage = true;\n                return true;\n            })\n            .catch(err => {\n                console.log(\"에러\");\n                setEmailDuplicateCheck(false);\n                return false;\n            })\n        }else{\n            alert('이메일 형식을 맞춰주세요');\n            setValidEmail(false);\n        }\n\n    }\n\n    const checkNameLength = (target) => {\n        if(lengthInvalidCheck(target, 2, 20)){\n            setNameLengthCheck(true);\n            return true;\n        }else{\n            setNameLengthCheck(false);\n            return false;\n        }\n    }\n\n    const checkNameScript = (target) => {\n        const scriptCheck = /<(|\\/|[^\\/>][^>]+|\\/[^>][^>]+)>/;\n        if(!regCheck(target, scriptCheck)){\n            setNameScriptCheck(true);\n            return true;\n        }else{\n            setNameScriptCheck(false);\n            return false;\n        }\n    }\n\n    const checkPasswordLength = (target) => {\n        if(lengthInvalidCheck(target,8, 20)){\n            setPasswordLengthCheck(true);\n            return true;\n        }else{\n            setPasswordLengthCheck(false);\n            return false;\n        }\n    }\n\n    const checkPasswordReg = (target) => {\n        const passRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/    //8글자이상, 하나이상의 숫자, 하나이상의 문자, 하나이상의 특수문자 들어갔는지\n        if(regCheck(target, passRegex)){\n            setPasswordRegCheck(true);\n            return true;\n        }else{\n            setPasswordRegCheck(false);\n            return false;\n        }\n    }\n\n    const checkSamePassword = (source, target) => {\n        if(source === target){\n            setSamePasswordCheck(true);\n            return true;\n        }else{\n            setSamePasswordCheck(false);\n            return false;\n        }\n    }\n\n    const checkPasswordCheckLength = (target) => {\n        if(target >= 1){\n            setPasswordCheckLengthCheck(true);\n            return true;\n        }else{\n            setPasswordCheckLengthCheck(false);\n            return false;\n        }\n    }\n\n    ///////////////전체 유효성 검사\n    const checkValidEmail = () => {\n        // if(checkEmailLength(email.length) && checkEmailScript(email) && checkEmailForm(email)){\n        //     setValidEmail(true);\n        // }else{\n        //     setValidEmail(false);\n        // }\n\n        //서브밋버튼을 눌렀을 때 모든 에러메세지를 보여주고 싶어서 아래와 같이 함. 나중에 리팩토링 할수 있으면 리팩토링. 밑의 메서드들도 다 마찬가지.\n        let flag = true;\n        if(checkEmailLength(email.length)){\n            flag = flag && true;\n        }else{\n            flag = flag && false;\n        }\n\n        if(checkEmailScript(email)){\n            flag = flag && true;\n        }else{\n            flag = flag && false;\n        }\n\n        if(checkEmailForm(email)){\n            flag = flag && true;\n        }else{\n            flag = flag && false;\n        }\n\n        // flag = checkEmailDuplicate(email) ? flag = flag&&true : flag = flag&&false;\n        if(doEmailDuplicateCheck){\n            flag = emailDuplicateCheck ? flag = flag&&true : flag = flag&&false;\n            // flag = checkEmailDuplicate(email) ? flag = flag&&true : flag = flag&&false; //이렇게 하면 제대로 작동 안된다. 비동기 때문인듯\n            \n        }else{\n            if(!duplicateErrorMessage){\n              alert('이메일 중복확인을 해주세요');\n              duplicateErrorMessage = true;\n            }\n            \n            flag = flag && false;\n        }\n\n        if(flag){\n            setValidEmail(true);\n            return true;\n        }else{\n            setValidEmail(false);\n            console.log(\"=======\",validEmail);\n            return false;\n        }\n    }\n\n    const checkValidName = () => {\n        let flag = true;\n\n        if(checkNameLength(name.length)){\n            flag = flag && true;\n        }else{\n            flag = flag && false;\n        }\n\n        if(checkNameScript(name)){\n            flag = flag && true;\n        }else{\n            flag = flag && false;\n        }\n\n        if(flag){\n            setValidName(true);\n            return true;\n        }else{\n            setValidName(false);\n            return false;\n        }\n    }\n\n    const checkValidPassword = () => {\n        let flag = true;\n        flag = checkPasswordLength(password.length) ? flag && true : flag && false;\n        flag = checkPasswordReg(password) ? flag && true : flag && false;\n\n        if(flag){\n            setValidPassword(true);\n            return true;\n        }else{\n            setValidPassword(false);\n            return false;\n        }\n    }\n\n    const checkValidPasswordCheck = () => {\n        let flag = true;\n        flag = checkSamePassword(password,passwordCheck) ? flag && true : flag && false;\n        flag = checkPasswordCheckLength(passwordCheck.length) ? flag && true : flag && false;\n\n        if(flag){\n            setValidPasswordCheck(true);\n            return true;\n        }else{\n            setValidPasswordCheck(false);\n            return false;\n        }\n    }\n\n    const submit = () => {\n        checkValidEmail();\n        checkValidName();\n        checkValidPassword();\n        checkValidPasswordCheck();\n\n        // if(validEmail && validName && validPassword && validPasswordCheck){\n        if(checkValidEmail() && checkValidName() && checkValidPassword() && checkValidPasswordCheck()){\n            //제출\n            console.log(\"제출가능\");\n            axios.post('https://geteton.ga/users/signup',{\n              email,\n              password,\n              username : name\n            })\n            .then(res => {\n              console.log(res.data);\n              props.history.push('/users/signin')\n            })\n            .catch(err => {\n              console.log(\"ERR : \", err);\n            })\n        }else{\n            console.log(\"제출불가\");\n        }\n    }\n    \n    //social sign up\n    const socialSignUp = (e) => {\n        \n        if(e.target.textContent.includes('GitHub')){\n            window.location.assign('https://github.com/login/oauth/authorize?client_id=b7cf6608d7fdc7e57bce');\n        }\n    }\n\n    useEffect(() => {\n        console.log(\"use Effect\");\n        const url = new URL(window.location.href);\n        const authorizationCode = url.searchParams.get('code');\n        if(authorizationCode){\n            getAccessToken(authorizationCode);\n        }\n    })\n\n    const getAccessToken = (authorizationCode) => {\n        console.log(\"getAccessToken!\");\n        axios.post('http://localhost:5000/users/signup/oauth',{\n            authorizationCode\n        },{\n            withCredentials : true\n        })\n        //여기서 서버로 인증코드 (authorizationCode)를 보내주면 서버에서 액세스 토큰을 요청하고, 액세스 토큰을 클라이언트로 바로 반환해 주는 것이 아니라 받은 액세스 토큰을 가지고\n        //다시 깃헙 사이트에 요청을 해서 정보를 받아온다. 그리고 받은 정보를 바탕으로 회원가입을 시킨다.(데이터베이스에 정보를 넣는다).\n        //여기까지 성공적으로 진행되었다면 성공적으로 잘 됬다는 리스폰스를 보내준다. 그리고 클라이언트는 인트로 페이지로.\n    }\n\n    return(\n        <div className = \"signUpContainer\">\n\n          <Logo />\n          <div id = \"signUpDiv-wrapper\">\n\n            <div className = \"signUpDiv\">\n\n                {/* <div className = \"socialLoginDiv\">\n                    <button onClick = {socialSignUp}>GitHub</button>\n                </div> */}\n                <div className = {`email inputDiv ${validEmail ? \"\" : 'validError'}`}>\n                    <div className = \"inputSection\">\n                        <span className = \"item\">이메일</span>\n                        \n                            <input type = \"text\"\n                                    className = \"emailInput\"\n                                    onChange = {handleEmail}\n                                    value = {email}\n                                    placeholder=\"Enter email\"\n                            />\n                        <div className=\"duplicateCheck\">\n                            <button onClick={checkEmailDuplicate}>중복확인</button>\n                            {doEmailDuplicateCheck ? (emailDuplicateCheck ? \"✔️사용가능한 이메일입니다\" : \"✔️중복된이메일입니다\") : \"\"}\n                        </div>\n                    </div>\n                    <div className = \"errorSection\">\n                        <div className = {`errorMessage ${emailLengthCheck ? 'inactiveErrorMessage' : 'activeErrorMessage'}`}>✔️5글자 이상, 20글자 이하로 해주세요.</div>\n                        <div className = {`errorMessage ${emailFormCheck ? 'inactiveErrorMessage' : 'activeErrorMessage'}`}>✔️이메일 형식에 맞게 써주세요</div>\n                        {/* <div className = {`errorMessage ${emailDuplicateCheck ? 'inactiveErrorMessage' : 'activeErrorMessage'}`}>✔️중복된 이메일 입니다</div> */}\n                        <div className = {`errorMessage ${emailScriptCheck ? 'inactiveErrorMessage' : 'activeErrorMessage'}`}>✔️스크립트 쓰지 마세요🤖</div>\n                    </div>\n                </div>\n                <div className = {`name inputDiv ${validName ? \"\" : \"validError\"}`}>\n                    <div className = \"inputSection\">\n                        <span className=\"item\">이름</span> \n                        <input type=\"text\"\n                                className = \"nameInput\"\n                                onChange = {handleName}\n                                value = {name}\n                                placeholder=\"Enter name\"\n                        />\n                    </div>\n                    <div className = \"errorSection\">\n                        <div className = {`errorMessage ${nameLengthCheck ? 'inactiveErrorMessage' : 'activeErrorMessage'}`}>✔️2글자 이상, 20글자 이하로 해주세요</div>\n                        <div className = {`errorMessage ${nameScriptCheck ? 'inactiveErrorMessage' : 'activeErrorMessage'}`}>스크립트 쓰지 마세요🤖</div>\n                    </div>\n                </div>\n                <div className = {`password inputDiv ${validPassword ? '' : 'validError'}`}>\n                    <div className = \"inputSection\">\n                        <span className=\"item\">비밀번호</span> \n                        <input type = \"password\"\n                                className = \"passwordInput\"\n                                onChange = {handlePassword}\n                                value = {password}\n                                placeholder=\"Enter password\"\n                        />\n                    </div>\n                    <div className = \"errorSection\">\n                        <div className = {`errorMessage ${passwordLengthCheck ? 'inactiveErrorMessage' : 'activeErrorMessage'}`}>✔️8글자 이상, 20글자 이하로 해주세요</div>\n                        <div className = {`errorMessage ${passwordRegCheck ? 'inactiveErrorMessage' : 'activeErrorMessage'}`}>✔️문자, 숫자, 특수문자가 각각 하나이상 들어가야 합니다.</div>\n                    </div>\n                </div>\n                <div className = {`passwordCheck inputDiv ${validPasswordCheck ? '' : 'validError'}`}>\n                    <div className = \"inputSection\">\n                        <span className=\"item\">비밀번호 확인</span>\n                        <input type = \"password\"\n                                className = \"passwordCheckInput\"\n                                onChange = {handlePasswordCheck}\n                                value = {passwordCheck}\n                                placeholder=\"Enter same password \"\n                        />\n                    </div>\n                    <div className = \"errorSection\">\n                        <div className = {`errorMessage ${samePasswordCheck ? 'inactiveErrorMessage' : 'activeErrorMessage'}`}>같은 비밀번호를 써주세요</div>\n                        <div className = {`errorMessage ${passwordCheckLengthCheck ? 'inactiveErrorMessage' : 'activeErrorMessage'}`}>입력해주세요</div>\n                    </div>\n                </div>\n                <div className = \"submitButtonDiv\">\n                    <button\n                        className = \"submitButton\" \n                        onClick = {submit}>Sign Up</button>\n                </div>\n            </div>\n          </div>\n            \n        </div>\n    )\n}\n\nexport default SignUp;","/home/ddubbu/git/ETON/1. ETON-client/src/components/common/Header.js",["136","137","138"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport LogoutDropDown from \"../modal/logoutDropDown.js\";\nimport Logo from \"./Logo.js\";\n\nconst Header = ({isLogin, HandleLogout, accessToken}) => {\n  const history = useHistory();\n\n  const [showLogoutDropDown, setShowLogoutDropDown] = useState(false); \n  // const logoutContainer = React.createRef();\n\n  const openLogoutDropDown = () => {\n    setShowLogoutDropDown(true);\n  }\n\n  const closeLogoutDropDown = () => {\n    setShowLogoutDropDown(false);\n  }\n\n  console.log(\"HEADER - accessToken : \", accessToken);\n\n  return (\n    <div className=\"Header\">\n      <Logo />\n      {isLogin ? \n      <div className = \"logoutDiv\">\n        <button onClick={openLogoutDropDown}>\n          Log out\n        </button>\n        {showLogoutDropDown && <LogoutDropDown closeLogoutDropDown = {closeLogoutDropDown} HandleLogout = {HandleLogout} accessToken = {accessToken}/>}\n      </div>\n        :\n        <div>\n        <button\n          onClick={() => {\n            history.push(\"/users/signup\");\n          }}\n        >\n          Sign Up\n        </button>\n        <button\n          onClick={() => {\n            history.push(\"/users/signin\");\n          }}\n        >\n          Log In\n        </button>\n      </div>\n      }\n      {/* {showLogoutModal ? \n      <LogoutModal closeLogoutModal = {closeLogoutModal}/>\n      : \n      null} */}\n    </div>\n  );\n};\n\nexport default Header;\n","/home/ddubbu/git/ETON/1. ETON-client/src/components/common/Logo.js",["139"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Logo(){\n  return (\n    <section className=\"logo\">\n      <Link to=\"/\">\n        <img src= \"../image/logo-ETON-1080.png\"></img>\n        <span> ETON </span>\n      </Link>\n    </section>\n  )\n}","/home/ddubbu/git/ETON/1. ETON-client/src/pages/Main.js",[],"/home/ddubbu/git/ETON/1. ETON-client/src/components/modal/logoutDropDown.js",[],"/home/ddubbu/git/ETON/1. ETON-client/src/components/mainPage/profile.js",["140"],"import React, { useState } from 'react';\nimport UserInfoEdit from '../modal/userInfoEdit';\n\nconst Profile = (props) => {\n\n    const [showModal, setShowModal] = useState(false);\n\n    const showEditModal = () => {\n        setShowModal(true);\n    }\n\n    const closeEditModal = () => {\n        setShowModal(false);\n    }\n\n    return(\n        <div className=\"profileDiv\">\n            <div className = \"profileHeader\">\n                <h2>My Info</h2>\n                <button \n                    className = \"profileEditButton mainButton\"\n                    onClick = {showEditModal}    \n                >✎</button>\n            </div>\n            <div className = \"pictureDiv\">\n                <img src='../image/스폰지밥.png' className = \"profilePicuture\"></img>\n            </div>\n            <div className = \"infoDiv\">\n                <h3>{props.userName}</h3>\n                <h3>{props.userEmail}</h3>\n            </div>\n            {showModal ? <UserInfoEdit userId = {props.userId} closeEditModal = {closeEditModal}/> : null}\n        </div>\n    )\n}\n\nexport default Profile;","/home/ddubbu/git/ETON/1. ETON-client/src/components/mainPage/taskThumbNail.js",[],"/home/ddubbu/git/ETON/1. ETON-client/src/components/modal/userInfoEdit.js",["141"],"import React, { useState } from 'react';\nimport App from '../../App';\nimport ReactDOM from 'react-dom';\n\n\nconst UserInfoEdit = (props) => {\n    //유저정보를 main에서부터 건너건너 이름이랑 이메일을 전해줄지, 아니면 id만 건네줘서 그걸로 검색하게 할지\n    //유저정보수정할때 비밀번호 필요하게 할지 안할지\n\n    const [userEmail, setUserEmail] = useState('Sponge@Bob.com');\n    const [userName, setUserName] = useState('Sponge Bob');\n\n    const handleUserEmail = (e) => {\n        setUserEmail(e.target.value);\n    }\n\n    const handleUserName = (e) => {\n        setUserName(e.target.value)\n    }\n\n    const closeEditModal = () => {\n        props.closeEditModal();\n    }\n\n    return (\n        ReactDOM.createPortal(\n            <div className = \"userInfoEditDiv\" >\n                <div className = \"userInfoEditDivContents\">\n                    <button onClick={closeEditModal} className=\"userInfoEditDivButton-close\">&times;</button>\n                    <h1>Edit User Info</h1> \n                    <div className = \"userInfoEditDivLabel\">이메일</div>\n                    <input \n                        type = \"text\"\n                        onChange = {handleUserEmail}\n                        value = {userEmail}    \n                    />\n                    <div className = \"userInfoEditDivLabel\">이름</div>\n                    <input\n                        type=\"text\"\n                        onChange={handleUserName}\n                        value = {userName}\n                    />\n                    <button className=\"userInfoEditDivButton-submit\">수정하기</button>\n                </div>\n            </div>,\n            document.querySelector('.App')\n        )\n        \n    )\n}\n\nexport default UserInfoEdit;","/home/ddubbu/git/ETON/1. ETON-client/src/pages/Board.js",["142","143"],"import React, { useState } from 'react';\n// import ReactDOM from 'react-dom'\nimport ProgressList from '../components/board/ProgressList.js';\nimport MemberDorpDown from '../components/modal/MemberDropDown.js';\nimport PrgMenuDropDown from '../components/modal/PrgMenuDropDown.js';\nimport TaskMenuDropDown from '../components/modal/TaskMenuDropDown.js';\nimport TaskInfoEdit from '../components/modal/TaskInfoEdit.js';\n\nimport sortObject from '../helper/sortObject';\nimport drag_n_drop from '../helper/drag-n-drop.js';\nimport eventHandler from '../helper/eventHandler.js';\n\nimport '../styles/board.css'\n\nexport default function Board(){\n  // 상위 컴포넌트에서 한꺼번에 관리하자!\n\n  const [ board, setBoard ] = useState({\n    id : 1, // 숫자, 문자열 혼동 조심\n    title : 'project',\n    admin_userId : 1,\n    prg_priority : '2,1,3' // (progress_id 순서) 관계는 부모가 갖고 있음 board - prg 관계는 board가 관여\n  })\n\n  const [ progresses, setProgresses ] = useState({\n    // 객체 형태로 주어야할 것 같음. >> 원활한 state update를 위해서\n    1 : { // key = progress_id\n      id : 1, // <ProgressList /> name 세팅을 위해서 \n      title : '안녕',\n      task_priority : '1,2'\n    },\n    2 : {\n      id : 2,\n      title : 'progress 2',\n      task_priority : '3', //'3,4'\n    },\n    3 : {\n      id : 3,\n      title : 'progress 3',\n      task_priority : '4', //'3,4'\n    },\n  })\n  \n  const [ tasks, setTasks ] = useState({\n    1: { // key = card_id\n      id : 1,\n      title : 'task card 1',\n      description: 'task 내용입니다. 나중에 description, member 적용할 것임.'\n    },\n    2: {\n      id : 2,\n      title : 'task card 2',\n      description: 'task 내용입니다. 나중에 description, member 적용할 것임.'\n    },\n    3: {\n      id : 3,\n      title : 'task card 3',\n      description: 'task 내용입니다. 나중에 description, member 적용할 것임.'\n    },\n    4: {\n      id : 4,\n      title : 'task card 4',\n      description: 'task 내용입니다. 나중에 description, member 적용할 것임.'\n    }\n  })\n\n  const [ members, setMembers ] = useState([ \n    { id: 1, name: '사람1' },\n    { id: 2, name: '사람2'}\n  ] );\n\n  // 모달 띄우고 있는지 여부\n  const [ modals, setModals ] = useState({ \n    member : false,\n    memberSearch : false,\n    progress : false,\n    task : false,\n    task_edit: false,\n  })\n\n  // event state 감지\n  const [ event, setEvent ] = useState({\n    method : 'PUT', // GET, POST, PUT, DELETE\n    target : 'task', // board, progress, target\n    content : { // 무엇이든\n      title: '',\n      description: ''\n    }, \n    board_id : board.id,\n    progress_id : null,\n    task_id : null\n  })\n\n  // redux 처럼 전체 state 통솔 객체\n  const store = {\n    board: { // 모두 객체 주소니깐 업데이트 안해줘도 괜찮겠지?\n      state : board,\n      setState : setBoard\n    },\n    progresses: { // 모두 객체 주소니깐 업데이트 안해줘도 괜찮겠지?\n      state : progresses,\n      setState : setProgresses\n    },\n    tasks : {\n      state: tasks,\n      setState : setTasks\n    },\n    members : {\n      state: members,\n      setState: setMembers\n    },\n    modals : {\n      state : modals,\n      setState: setModals\n    },\n    event: {\n      state: event,\n      setState: setEvent\n    }\n  }\n\n  //! 여기서부터 progress 추가 코드\n  // local state\n  const [input, setInput] = useState({\n    title: '',\n    description: ''\n  })\n\n  const inputChangeHandler = (e)=>{\n    setInput({\n      ... input,\n      [e.target.name] : e.target.value\n    })\n  }\n\n  async function clickAddHandler(e, target='progress', id){\n    // TODO 😁 서버에서 새로 생성한 새로운 id 먼저 주시고\n    const new_prg_id = '5'\n    \n    if(target === 'progress') {\n      await setProgresses({ \n        ...progresses, \n        [new_prg_id]: { // here\n          id : new_prg_id, // here\n          title : input.title,\n          task_priority : '', \n        }})\n      await setBoard({ ... board, prg_priority: board['prg_priority'] + `,${new_prg_id}` }); // here\n    } \n  }\n \n  // drag-n-drop\n  document.addEventListener('mousemove', drag_n_drop.handleMouseMove);\n\n  /* (끝) drag-drop */\n\n  return (\n    <div id=\"main-content\">\n      <section id=\"sub-nav-bar\">\n        <input className=\"btn-sub-nav-bar board_title\" value={board.title} onChange={(e)=>{eventHandler.titleModifyHandler(e, store, 'board')}}></input>\n        <span className=\"btn-sub-nav-bar divider\"></span>\n        <button name='member' className=\"btn-sub-nav-bar member\" onClick={(e)=>eventHandler.toggleModal(e, store)}>member</button>\n        \n        <button className=\"btn-sub-nav-bar invite\">invite</button>\n      </section>\n      {/* 모달은 position:absolute 이므로 한꺼번에 정의하자, 누르면 활성화되도록 */}\n      { modals.member ? <MemberDorpDown members={members} />  : '' }\n      { modals.progress ? <PrgMenuDropDown store={store} /> : '' }\n      { modals.task ? <TaskMenuDropDown store={store} /> : '' }\n      { modals.task_edit ? <TaskInfoEdit store={store} /> : '' }\n\n      <section id=\"progress-wrapper\">\n        {\n          sortObject(progresses, board.prg_priority).map((progress, idx)=>{\n            return (\n              <>\n                <article className={`prg-dropzone prg-dropzone-${idx}`}></article>\n                <ProgressList key={idx}\n                  ids={{board_id: board.id, progress_id: progress.id}}\n                  store={store}\n                />\n              </>\n            )\n          })\n        }\n        <article className={`prg-dropzone prg-dropzone-${board.prg_priority.split(',').length}`}></article>\n        {/* 누르기전까지 숨어 있음 */}\n        <article className='progress form-add-progress'>\n          <input \n            name='title'\n            className='form-add-progress-input' \n            placeholder='Enter progress title...'\n            onChange={inputChangeHandler}\n          ></input>\n          <button className='form-add-progress-btn-add' onClick={clickAddHandler}>Add progress</button>\n          <button \n            className='form-add-progress-btn-cancle'\n            onClick={eventHandler.cancleAddInfo}\n          >X</button>\n        </article>\n        <button \n          className=\"btn-add-progress\" \n          onClick={e=>{eventHandler.clickAddSomething(e, 'progress')}}\n        > + Add another progress \n          </button>\n      </section>\n    </div>\n  )\n}\n\n\n","/home/ddubbu/git/ETON/1. ETON-client/src/components/board/ProgressList.js",["144","145","146","147","148","149","150"],"import React, { useEffect, useState } from 'react';\nimport TaskList from './TaskList.js';\n\nimport sortObject from '../../helper/sortObject.js';\nimport drag_n_drop from '../../helper/drag-n-drop.js';\nimport eventHandler from '../../helper/eventHandler.js'\n\nexport default function ProgressList( { store, ids }){\n  const { state: board, setState: setBoard } = store.board;\n  const { state: progresses, setState: setProgresses } = store.progresses;\n  const { state: tasks, setState: setTasks } = store.tasks;\n  const { state: event, setState: setEvent } = store.event;\n  const progress = progresses[ids.progress_id];\n\n  //! 여기서부터 progress 추가 코드\n  // local state\n  const [input, setInput] = useState({\n    title: '',\n    description: ''\n  })\n\n  const [newTaskId, setNewTaskId] = useState(undefined);\n\n  const inputChangeHandler = (e)=>{\n    setInput({\n      ... input,\n      [e.target.name] : e.target.value\n    })\n  }\n\n  useEffect( async ()=>{\n    const eventProgress = progresses[event.progress_id]\n    if(!newTaskId) return;\n    // console.log(\"progressId\", progress.id)\n    await setProgresses({ // 이제서야 progress 추가\n      ... progresses, \n      [event.progress_id]:{\n        ...eventProgress,\n        task_priority: eventProgress['task_priority'] + `,${newTaskId}` \n      }\n    }); // here\n\n  }, [tasks])\n\n\n  async function clickAddHandler(e, target='task', id){\n    setEvent({\n      ...event,\n      progress_id: ids.progress_id\n    })\n    // console.log('click', event.progress_id)\n    e.stopPropagation();\n    // TODO 😁 서버에서 새로 생성한 새로운 id 먼저 주시고\n    // id를 기반으로 정보를 update 하자!\n    const new_task_id = '100';\n\n    // progress.task_priority 에 추가하기위해\n    await setNewTaskId(new_task_id);\n\n    if(target === 'task'){\n      // task 추가하기\n      await setTasks({ \n        ...tasks, \n        [new_task_id]: { // here\n          id : new_task_id, // here\n          title : input.title,\n          description: input.description\n      }})\n    }\n\n    // 입력창 닫기\n    eventHandler.cancleAddInfo(e, 'form-add-task')\n    // 입력 다 지우기\n    await setInput({\n      title: '',\n      description: ''\n    })\n\n  }\n\n  // console.log('여기 의심해봐, progress is undefined ? ', progress)\n  return !progress ? '' : ( //! 혹시 여기 (!progress ? '' :) \n    <article className={\"progress\" + \" \" + progress.id} \n      onMouseDown={drag_n_drop.handleMouseDown}\n      onMouseUp={(e)=>{drag_n_drop.handleMouseUp(e, store, ids)}}\n      onMouseMove={drag_n_drop.handleMouseMove}\n      >\n      <section className=\"progress-head drag-drop\">\n        <input className=\"progress-title\" \n          value={progress.title} \n          onChange={(e)=>{\n          eventHandler.titleModifyHandler(e, store, 'progress', progress.id)}}></input>\n        <button \n          name='progress'\n          className=\"btn-progress-menu\"\n          onClick={(e)=>eventHandler.toggleModal(e, store, ids)} //{...ids, prg_id: progress.id}\n        >···</button>\n      </section>\n      <section className=\"progress-tasks-wrapper\">\n        {\n          sortObject(tasks, progress.task_priority).map((task, idx)=>{\n            return !task ? '' : (\n              <>\n                <article className={`task-dropzone prg-${progress.id}-taskDropZone-${idx}`}></article>\n                <TaskList \n                  taskDropZone={idx} \n                  ids={{...ids, task_id: task.id}}\n                  store={store}\n                  />\n              </>\n            )\n          })\n        }\n        <article className={`task-dropzone prg-${progress.id}-taskDropZone-${progress.task_priority.split(',').length}`}></article>\n      </section>\n\n      {/* 누르기전까지 숨어 있음 */}\n      <article className={`task prg-${progress.id} form-add-task`}>\n        <input \n          name='title'\n          className='form-add-task-input-title' \n          placeholder='Enter a title...'\n          value={input.title}\n          onChange={inputChangeHandler}\n        ></input>\n        <textarea \n          name='description'\n          className='form-add-task-input-description' \n          placeholder='Enter a description...'\n          value={input.description}\n          onChange={inputChangeHandler}\n        ></textarea>\n\n            <button \n              className='form-add-task-btn-add'\n              onClick={clickAddHandler}\n            >Add Task</button>\n\n\n        <button \n          className='form-add-task-btn-cancle'\n          onClick={eventHandler.cancleAddInfo}\n        >X</button>\n      </article>\n      <button \n        className=\"btn-add-task\"\n        onClick={(e)=>{eventHandler.clickAddSomething(e, 'task', progress.id)}}\n      > + Add a task \n      </button>\n    </article>    \n  )\n}","/home/ddubbu/git/ETON/1. ETON-client/src/helper/drag-n-drop.js",["151","152","153","154","155","156","157","158","159"],"import eventHandler from '../helper/eventHandler.js';\n\nexport default {\n  handleMouseDown : (e) => { // 클릭한 요소 감지, .hold 이름 붙여주기\n    const $el = e.target;\n    const classList = $el.classList;\n\n    if( !classList.contains('progress') && !classList.contains('task') \n        || classList.contains('form-add-task')) { // Create 를 위한 공간 움직이지 않도록 \n      return console.log('progress, task 둘다 아님')\n    }\n    if( !classList.contains('hold') ){\n      // target 클릭했을 때, 마우스 커서의 XY좌표\n      const mouseX = e.clientX;\n      const mouseY = e.clientY;\n      \n      // 선택한 요소의 XY좌표 (왼쪽 상단 모서리 기준)\n      const pos = $el.getBoundingClientRect();\n      const x = pos.x;\n      const y = pos.y;\n\n      // 선택한 요소 안에 있는 마우스 커서의 XY좌표\n      const gapX = mouseX - x;\n      const gapY = mouseY - y;\n      \n      $el.setAttribute(\"gap-x\", gapX);\n      $el.setAttribute(\"gap-y\", gapY);\n      classList.add(\"hold\");\n    }\n  },\n  handleMouseMove : function(e){ // .hold 요소 > 움직임 > 위치 반영하기\n    const $el = document.querySelector(\".hold\");\n\n    if( $el ){\n      // 움직이는 마우스 커서의 XY좌표 : 새로운 위치\n      const mouseX = e.clientX;\n      const mouseY = e.clientY;\n            \n      // 선택한 공 안에 있는 마우스 커서의 XY좌표\n      const gapX = $el.getAttribute(\"gap-x\");\n      const gapY = $el.getAttribute(\"gap-y\");\n      \n      // 마우스 커서의 위치에 따른 공의 XY좌표\n      const x = mouseX - gapX;\n      const y = mouseY - gapY;\n      \n      // 공의 위치를 변경\n      $el.style.left = x +\"px\";\n      $el.style.top = y +\"px\";\n\n      //! progress 가 움직일 때는 세로로만\n      if($el.classList.contains('progress')){\n        // $dropzone 위치 감지\n        const $dropzones = document.querySelectorAll('.prg-dropzone');\n        $dropzones.forEach($dropzone=>{\n          const x = $dropzone.getBoundingClientRect().x;\n          if( mouseX > x && mouseX < x + 272) { \n            // hover 로 하려고 했는데, $el 이 target 이라 $dropzone:hover 인식안됨.\n            // 안에 들어오면 넓혀주고, 배경색로 알려주기\n            $dropzone.style.width = '272px'\n            $dropzone.style.background = 'rgba(0, 0, 0, 0.2)'; //.349\n          }else {\n            // 감지된거 다시 reset 해줘야함.\n            $dropzone.style.width = '0px'\n          }\n        })\n      }\n\n      //! task 가 움직일 때는 세로, 가로 모두 고려\n      else if($el.classList.contains('task')){\n        // $dropzone 위치 감지\n        const $dropzones = document.querySelectorAll('.task-dropzone');\n        $dropzones.forEach($dropzone=>{\n          const x = $dropzone.getBoundingClientRect().x;\n          const y = $dropzone.getBoundingClientRect().y;\n\n          // 가로 세로 dropzone 내부 체크\n          if( (mouseX > x && mouseX < x + 272) && (mouseY > y && mouseY < y + 100 ) ) { \n            $dropzone.style.width = '256px';\n            $dropzone.style.height = '100px';\n            $dropzone.style.background = 'rgb(161, 161, 161, 0.2)';\n          }else {\n            // 감지된거 다시 reset 해줘야함.\n            $dropzone.style.height = '0px'\n          }\n        })\n      }\n    }\n  },\n  handleMouseUp : function(e, store, ids){ \n    // 손을 놓았을 때 > new priority : state 변경\n    // ids : 출발지 정보\n    //TODO dropzone은 className 에서 추출하는 수 밖에 없겠지? 우선은?\n    const { state: board, setState: setBoard } = store.board;\n    const { state: progresses, setState: setProgresses } = store.progresses;\n    const { state: tasks, setState: setTasks } = store.tasks;\n    const { changePrgPriority, changeTaskPriority }  = eventHandler;\n    const prev_priority = board.prg_priority;\n\n    const $el = document.querySelector(\".hold\");\n    if (!$el) return;\n\n    // progress, task 일반화\n    // prv_priority는 progress 변화를 위해서임.\n\n    if( $el ){\n      // 움직이면 적용된 속성 및 class를 삭제\n      $el.removeAttribute(\"gap-x\")\n      $el.removeAttribute(\"gap-y\")\n      $el.classList.remove(\"hold\");\n\n      // 놓여진 마우스 커서의 XY좌표\n      const mouseX = e.clientX;\n      const mouseY = e.clientY;\n\n\n      if(Object.keys(ids).length ===2){ //$el.classList.contains('progress')){\n\n        // 놓여진 progressId\n        const progressId = ids.progress_id;\n\n        // 놓여진 $dropzone 찾고, 새로운 priority 로 state 변경\n        const $dropzones = document.querySelectorAll('.prg-dropzone');\n        const split_prev_priority = prev_priority.split(',');\n\n        // progressId 지움\n        const other_priority = split_prev_priority.filter(pri=>{\n          if(Number(pri) === Number(progressId)) return false;\n          else return true;\n        })\n\n        const new_priority = [];\n        for(let idx=0; idx<$dropzones.length; idx ++){\n          const x = $dropzones[idx].getBoundingClientRect().x;\n          if( mouseX > x && mouseX < x + 272) { \n            new_priority.push(progressId);\n          }else if(other_priority.length !== 0){\n            new_priority.push(other_priority.shift())\n          }\n        }\n\n        if(new_priority.length === 1 + split_prev_priority.length){\n          new_priority.pop(); // 끝에 왜 붙어있는지 모르겠음\n        }\n\n        // state 변경\n        if(new_priority.length === split_prev_priority.length \n          && new_priority.join(',') !== prev_priority){\n            changePrgPriority(store, new_priority.join(','), ids)\n        }\n\n        // dropzone 크기 바꾸기 : 마지막이나 처음 $dropzone reset 을 위해\n        $dropzones.forEach($dropzone=>{\n          $dropzone.style.width='0px'\n        })\n\n      } /* [끝] $el.classList.contains('progress') */\n      else if(Object.keys(ids).length === 3) { // task 이동\n        e.stopPropagation();\n        let taskDropZone_Id = Array.from($el.classList).filter((str, idx)=>{\n          if(!str.match(/^taskDropZone-/)) return false;\n          else return true;\n        }) [0]\n\n        //! 출발지 \n        const source = { //출발지 정보\n          prgId: String(ids.progress_id), //progressId_taskId.split('-')[1],\n          taskId: String(ids.task_id), //progressId_taskId.split('-')[3],\n          taskDropZone: taskDropZone_Id.split('-')[1]\n        }\n\n        // 놓여진 $dropzone 찾고, 새로운 priority 로 state 변경\n        const $dropzones = document.querySelectorAll('.task-dropzone');\n\n        $dropzones.forEach($dropzone=>{\n          const x = $dropzone.getBoundingClientRect().x;\n          const y = $dropzone.getBoundingClientRect().y;\n\n          // 가로 세로 dropzone 내부 체크\n          if( (mouseX > x && mouseX < x + 272) && (mouseY > y && mouseY < y + 100 ) ) { \n            //! 도착지\n            let progressId_taskId = Array.from($dropzone.classList).filter(str=>{\n              if(!str.match(/^prg-/)) return false;\n              else return true;\n            })[0];\n\n            const target = { //도착지 정보\n              prgId: progressId_taskId.split('-')[1],\n              taskDropZone: progressId_taskId.split('-')[3]\n            }\n\n            //! 출발지 도착지 같으면 pass\n            if(source.prgId === target.prgId\n               && source.taskDropZone === target.taskDropZone){ // 같은 progress에 두었고\n              console.log(\"출발지 도착지 같으면 pass\")\n            }else {\n              changeTaskPriority(store, ids, {source, target})\n            }\n            // statte 변경\n\n          }else {\n            // 감지된거 다시 reset 해줘야함.\n            // $dropzone.style.height = '0px'\n          }\n        })\n\n        // dropzone 크기 바꾸기 : 마지막이나 처음 $dropzone reset 을 위해\n        $dropzones.forEach($dropzone=>{\n          $dropzone.style.height='0px'\n        })\n\n      } \n    }\n  }\n}","/home/ddubbu/git/ETON/1. ETON-client/src/helper/sortObject.js",[],"/home/ddubbu/git/ETON/1. ETON-client/src/components/board/TaskList.js",["160","161","162","163","164","165"],"import React, { useState } from 'react';\n\nimport drag_n_drop from '../../helper/drag-n-drop.js';\nimport eventHandler from '../../helper/eventHandler.js'\n\nexport default function TaskList({ store, ids, taskDropZone }){\n\n  const { state: board, setState: setBoard } = store.board;\n  const { state: progresses, setState: setProgresses } = store.progresses;\n  const { state: tasks, setState: setTasks } = store.tasks;\n  const progress = progresses[ids.progress_id];\n  const task = tasks[ids.task_id];\n\n  return (\n    <article className={`task prg-${ids.progress_id}-task-${ids.task_id} drag-drop taskDropZone-${taskDropZone}`}\n      // onMouseDown={drag_n_drop.handleMouseDown}\n      onMouseUp={(e)=>{drag_n_drop.handleMouseUp(e, store, ids)}}\n      // onMouseMove={drag_n_drop.handleMouseMove}\n      >\n      <section className=\"task-head\">\n        <div className=\"task-title\">{task.title}</div>\n        <button \n          name='task'\n          className=\"btn-task-menu\"\n          onClick={(e)=>eventHandler.toggleModal(e, store, ids)}\n        >···</button>\n      </section>\n      <section className=\"task-body\">\n        {task.description}\n      </section>\n    </article>\n  )\n}","/home/ddubbu/git/ETON/1. ETON-client/src/helper/eventHandler.js",["166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"/* 임시로 저장할거라서 component state 와 무관하게 정의함 */\nexport default {\n  // progress, task 새로 추가를 위한 입력창 열어줌.\n  clickAddSomething : (e, target, prg_id)=>{ \n    if(target === 'progress'){\n      const $form_add_progress = document.querySelector('.form-add-progress');\n      // 위에서 아래로 생기는 action은 나중에\n      $form_add_progress.style.display = 'flex'\n      e.target.style.display = 'none'\n    } else if (target === 'task'){\n      const $form_add_task = document.querySelector(`.form-add-task.prg-${prg_id}`);\n      // 위에서 아래로 생기는 action은 나중에\n      $form_add_task.style.display = 'flex'\n      e.target.style.display = 'none'\n    }\n  },\n  cancleAddInfo : (e, target) => {\n    console.log(e, \"here\")\n    if(target === 'form-add-progress' || e.target.classList.contains('form-add-progress-btn-cancle')){\n      document.querySelector('.form-add-progress')\n      .style.display = 'none';\n\n      document.querySelector('.btn-add-progress')\n      .style.display = 'block'\n    } else if(target === 'form-add-task' || e.target.classList.contains('form-add-task-btn-cancle')){\n      document.querySelectorAll('.form-add-task') // 특정 아이디 지정 안하고 모두 순회\n      .forEach($el=>{\n        $el.style.display = 'none';\n      })\n\n      document.querySelectorAll('.btn-add-task') // (얘도) 특정 아이디 지정 안하고 모두 순회\n      .forEach($el=>{\n        $el.style.display = 'block';\n      })\n    }\n\n  },\n\n  //TODO : progress, task 삭제\n  clickDeleteSomething: async (e, store)=>{\n    \n    const { state: board, setState: setBoard } = store.board;\n    const { state: progresses, setState: setProgresses } = store.progresses;\n    const { state: tasks, setState: setTasks } = store.tasks;\n    const { state: modals, setState: setModals } = store.modals;\n    const { state: event, setState: setEvent } = store.event;\n    const { board_id: b, progress_id: p, task_id: t } = event;\n\n    // modal 에서 delete 를 누르면? 해당 ids 를 갖고 행동 이행 : 어디서할까? board? 여기서 하자(그럼, state, setState 모두 가져오자)\n\n    //! progress 삭제\n    if( !t ) {\n      //TODO eventState ids 로 axios 요청 보내시오\n      //TODO progress 자체를 삭제하면 연관된 task도 삭제해야해서, 한번 다시 GET, render 하는게 빠를 수도\n      // console.log(\"delete\", b, p);\n      const newPrgPriority = board.prg_priority.split(',')\n      .filter(el=>String(p) === el ? false : true)\n      .join(',');\n\n      // 1. board 변경\n      await setBoard({\n        ...board, \n        prg_priority: newPrgPriority\n      })\n\n      // 2. progress 변경\n      delete progresses[p];\n      await setProgresses({\n        ...progresses\n      })\n\n      await setModals({\n        progress: false\n      })\n      \n    } else { //! task 삭제\n      //TODO eventState ids 로 axios 요청 보내시오\n      // console.log(\"delete\", b, p, t)\n\n      const newTaskPriority = progresses[p].task_priority.split(',')\n      .filter(el=>String(t) === el ? false : true)\n      .join(',');\n\n      // 1. progress 변경\n      await setProgresses({\n        ...progresses,\n        [p]: { // p 말고 [p] 변수값 입니다 ^^\n          ...progresses[p],\n          task_priority: newTaskPriority\n        }\n      })\n\n      // 2. task 변경\n      delete tasks[t];\n      await setTasks({\n        ...tasks\n      })\n\n      await setModals({\n        task: false\n      })\n    }\n  },\n\n  // TODO : board, progress, task 수정\n  clickModifyTask: async (e, store)=>{\n\n    const { state: board, setState: setBoard } = store.board;\n    const { state: progresses, setState: setProgresses } = store.progresses;\n    const { state: tasks, setState: setTasks } = store.tasks;\n    const { state: modals, setState: setModals } = store.modals;\n    const { state: event, setState: setEvent } = store.event;\n    const { board_id: b, progress_id: p, task_id: t } = event;\n\n    console.log('modify card', b, p, t)\n\n    await setModals({\n      ... modals,\n      task: false,\n      task_edit: true\n    })\n\n  },\n  submitModifyTask : async (e, store, input)=>{\n    // TODO : axios PUT 수정사항\n\n    // global state\n    const { state: tasks, setState: setTasks } = store.tasks;\n    const { state: event, setState: setEvent } = store.event;\n    const { state: modals, setState: setModals } = store.modals;\n    const { board_id: b, progress_id: p, task_id: t } = event;\n\n    // destructuring parameters\n    const {title, description} = input;\n    console.log(`-${title}-`)\n    console.log(`-${description}-`)\n\n    await setTasks({\n      ...tasks, // 깊이 깊어지면, 이전 값 꼭 잘 넣어놓고!\n      [t]:{\n        ...tasks[t],\n        title : title === '' || title === undefined ? tasks[t].title : title,\n        description : description === '' || description === undefined ? tasks[t].description : description\n      }\n    })\n\n    await setModals({\n      ...modals,\n      task_edit: false\n    })\n    \n  }, \n  titleModifyHandler: async (e, store, target, id)=>{\n\n    const { state: board, setState: setBoard } = store.board;\n    const { state: progresses, setState: setProgresses } = store.progresses;\n    if(target === 'board') await setBoard({ ... board, title: e.target.value });\n    if(target === 'progress') await setProgresses({ ...progresses, [id]: { ...progresses[id], title: e.target.value } })\n    const inputValue = e.target.value;\n    e.target.onkeypress = (e)=>{\n      if(e.keyCode === 13){\n        // TODO 😁 axios : board, progress title 수정 \n        console.log(e.target.value, \"title 수정\")\n        if(inputValue === '') return alert('빈칸은 입력이 불가능해요')\n        e.target.blur() // input focus 해제\n      }\n    }\n  },\n\n\n  // TODO : board, progress 순서 수정\n  /* (시작) drag-drop */\n   changePrgPriority: async function changePrgPriority (store, newPrgPriority, ids){ // string type 기대\n    //! Board 입장에서 Progress 순서 저장\n    // 새로운 순서 인자로 넘김.\n    const { state: board, setState: setBoard } = store.board;\n    const { state: progresses, setState: setProgresses } = store.progresses;\n    const { state: tasks, setState: setTasks } = store.tasks;\n    const progress = progresses[ids.progress_id]\n\n    await setBoard({\n      ...board,\n      prg_priority : newPrgPriority\n    }) \n  },\n\n  changeTaskPriority : async function changeTaskPriority (store, ids,{  source, target }){\n    //! Progress 입장에서 Task 순서 저장\n    // 여기서 새로운 순서 생성\n\n    const { state: board, setState: setBoard } = store.board;\n    const { state: progresses, setState: setProgresses } = store.progresses;\n    const { state: tasks, setState: setTasks } = store.tasks;\n    const progress = progresses[ids.progress_id]\n\n    //같은 progress & 다른 taskDropZone \n    if(source.prgId === target.prgId){ \n      const prev_task_priority = progresses[source.prgId].task_priority.split(',');\n      let new_task_priority = [];\n      for(let i=0; i<prev_task_priority.length; i++){\n        // 새로운 위치에 넣고\n        if(i === Number(target.taskDropZone)) new_task_priority.push(source.taskId);\n        // 다른 task 들은 순서대로 넣기\n        if(prev_task_priority[i] !== source.taskId) new_task_priority.push(prev_task_priority[i]);\n        // 예전 task는 지우기\n        // else continue;\n      }\n      // 같은 progress 니깐 한곳만 update 하면 됨.\n      await setProgresses({\n        ...progresses,\n        [source.prgId] : {\n          ...progresses[source.prgId],\n          task_priority : new_task_priority.join(',')\n        },\n      })\n    }\n\n    // 다른 progress\n    else{\n      // source(출발지) 삭제\n      // console.log(progresses, source.prgId)\n      const source_new_task_priority = progresses[source.prgId].task_priority.split(',');\n      source_new_task_priority.splice(source_new_task_priority.indexOf(source.taskId), 1);\n      \n      // target(도착지) 추가 - taskDropZone id 에 넣으면 된다!\n      let target_new_task_priority = [];\n        // 원래 빈 task_priority 였으면 바로 추가\n      if(progresses[target.prgId].task_priority.length === 0) target_new_task_priority = [source.taskId];\n      else {\n        target_new_task_priority = progresses[target.prgId].task_priority.split(',');\n        target_new_task_priority.splice(target.taskDropZone, 0, source.taskId)\n      }\n\n      // 출발지, 도착지 모두 update\n      await setProgresses({\n        ...progresses,\n        [source.prgId] : {\n          ...progresses[source.prgId],\n          task_priority : source_new_task_priority.join(',')\n        },\n        [target.prgId] : {\n          ...progresses[target.prgId],\n          task_priority : target_new_task_priority.join(',')\n        }\n      })\n    }\n\n  },\n  /* (끝) drag-drop */\n\n  toggleModal : async (e, store, ids)=>{\n    // modal 띄울만한거 : member, progress-menu, task-menu\n    // task-edit 모달은 그냥 닫기만 해주세요\n    const { state: modals, setState: setModals } = store.modals;\n    const { state: event, setState: setEvent } = store.event;\n\n    await setModals({\n      [e.target.name] : !modals[e.target.name]\n    })\n\n    console.log(e.target.name)\n    if(e.target.name !== 'task_edit' && !modals[e.target.name]){ // 만약 떠있으면\n      const $drop_down = document.querySelector('.drop-down')\n      $drop_down.style.left =  `${e.target.getBoundingClientRect().left}px`; //`${e.clientX}px`\n      $drop_down.style.top = `${e.target.getBoundingClientRect().bottom}px`\n    }\n\n    // 상태변경하고 event 에 넣어두기 -> dropDown요소 event 발생할 수 있어서 (삭제, 수정)\n    if(ids){ // member 모달은 click event 할 때 member_id 갖고 있으니깐 따로 작업 안해줘도 됨.\n      setEvent({\n        ...event,\n        board_id : ids.board_id,\n        progress_id : ids.progress_id,\n        task_id : ids.task_id\n      })\n    }\n\n    \n  },\n}","/home/ddubbu/git/ETON/1. ETON-client/src/components/modal/MemberDropDown.js",["191"],"import React, { useEffect } from 'react';\n\nexport default function MemberDorpDown ({members}) {\n\treturn (\n\t\t<section className=\"drop-down member\">\n      <p className=\"action-title\">List participants</p>\n      {members.map((member, idx)=>{\n        return (\n        <div className={`member-${member.id} drop-down-member`} key={idx}>\n          <div className='member-name'>{member.name}</div>\n          <button>x</button>\n        </div>\n        )\n      })}\n\n\t\t</section>\n\t)\n}\n\n","/home/ddubbu/git/ETON/1. ETON-client/src/components/modal/PrgMenuDropDown.js",["192"],"import React, { useEffect } from 'react';\nimport eventHandler from '../../helper/eventHandler.js';\n\nexport default function PrgMenuDropDown ({store}) {\n\treturn (\n\t\t<section name=\"progress\" className=\"drop-down\">\n      <p className=\"action-title\">List Actions</p>\n      <div name=\"progress\" onClick={(e)=>eventHandler.clickDeleteSomething(e, store)}>\n        삭제하기\n      </div>\n    </section>\n\t)\n}\n\n","/home/ddubbu/git/ETON/1. ETON-client/src/components/modal/TaskMenuDropDown.js",["193"],"import React, { useEffect } from 'react';\nimport eventHandler from '../../helper/eventHandler.js';\n\nexport default function TaskMenuDropDown ({ store }) {\n\treturn (\n\t\t<section name=\"task\" className=\"drop-down\">\n      <p className=\"action-title\">divst Actions</p>\n      <div name=\"task\" onClick={(e)=>eventHandler.clickDeleteSomething(e, store)}>삭제하기</div>\n      <div name=\"task\" onClick={(e)=>eventHandler.clickModifyTask(e, store)}>수정하기</div>\n    </section>\n\t)\n}\n\n","/home/ddubbu/git/ETON/1. ETON-client/src/components/modal/TaskInfoEdit.js",["194","195","196","197"],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport eventHandler from '../../helper/eventHandler'\n\nexport default function TaskInfoEdit ({store}){\n\n  // global state\n  const { state: tasks, setState: setTasks } = store.tasks;\n  const { state: event, setState: setEvent } = store.event;\n  const { board_id: b, progress_id: p, task_id: t } = event;\n\n  // local state  \n  const [ input, setInput ] = useState({\n    title: tasks[t].title,\n    description: tasks[t].description\n  })\n\n  const inputChangeHandler = async (e)=>{\n    await setInput({\n      [e.target.name] : e.target.value\n    })    \n  }\n\n  return(\n    ReactDOM.createPortal( // $(.App) component 와 별개로 스타일 적용하고 싶을 때, Modal에서 주로 사용될 듯\n      <section id=\"task-edit-form-wrapper\" >\n        <section id=\"task-edit-form\">\n          <input name=\"title\" placeholder=\"제목\" value={input.title}\n            onChange={inputChangeHandler}\n          ></input>\n          <textarea name=\"description\" placeholder=\"내용\" value={input.description}\n            onChange={inputChangeHandler}\n          ></textarea>\n          <button name=\"task_edit\" onClick={(e)=>eventHandler.submitModifyTask(e, store, input)}>save</button>\n          <button name=\"task_edit\" onClick={(e)=>eventHandler.toggleModal(e, store)}>cancle</button>\n        </section>\n      </section>,\n\n      document.querySelector('.App')\n    )\n  )\n}","/home/ddubbu/git/ETON/1. ETON-client/src/components/mainPage/boardThumbNail.js",[],"/home/ddubbu/git/ETON/1. ETON-client/src/helper/axiosRequest.js",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":5,"column":17,"nodeType":"204","messageId":"205","endLine":5,"endColumn":21},{"ruleId":"202","severity":1,"message":"206","line":5,"column":41,"nodeType":"204","messageId":"205","endLine":5,"endColumn":51},{"ruleId":"202","severity":1,"message":"207","line":11,"column":8,"nodeType":"204","messageId":"205","endLine":11,"endColumn":13},{"ruleId":"202","severity":1,"message":"208","line":12,"column":8,"nodeType":"204","messageId":"205","endLine":12,"endColumn":20},{"ruleId":"202","severity":1,"message":"209","line":21,"column":10,"nodeType":"204","messageId":"205","endLine":21,"endColumn":16},{"ruleId":"202","severity":1,"message":"210","line":21,"column":18,"nodeType":"204","messageId":"205","endLine":21,"endColumn":27},{"ruleId":"202","severity":1,"message":"211","line":22,"column":10,"nodeType":"204","messageId":"205","endLine":22,"endColumn":18},{"ruleId":"202","severity":1,"message":"212","line":22,"column":20,"nodeType":"204","messageId":"205","endLine":22,"endColumn":31},{"ruleId":"202","severity":1,"message":"213","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"215","line":51,"column":27,"nodeType":"216","endLine":51,"endColumn":68},{"ruleId":"202","severity":1,"message":"217","line":18,"column":12,"nodeType":"204","messageId":"205","endLine":18,"endColumn":29},{"ruleId":"202","severity":1,"message":"218","line":18,"column":31,"nodeType":"204","messageId":"205","endLine":18,"endColumn":51},{"ruleId":"219","severity":1,"message":"220","line":155,"column":38,"nodeType":"221","messageId":"222","endLine":155,"endColumn":39,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":166,"column":28,"nodeType":"221","messageId":"226","endLine":166,"endColumn":456},{"ruleId":"219","severity":1,"message":"220","line":212,"column":38,"nodeType":"221","messageId":"222","endLine":212,"endColumn":39,"suggestions":"227"},{"ruleId":"202","severity":1,"message":"228","line":395,"column":11,"nodeType":"204","messageId":"205","endLine":395,"endColumn":23},{"ruleId":"202","severity":1,"message":"207","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":13},{"ruleId":"202","severity":1,"message":"229","line":2,"column":17,"nodeType":"204","messageId":"205","endLine":2,"endColumn":26},{"ruleId":"202","severity":1,"message":"203","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":14},{"ruleId":"214","severity":1,"message":"215","line":8,"column":9,"nodeType":"216","endLine":8,"endColumn":49},{"ruleId":"214","severity":1,"message":"215","line":26,"column":17,"nodeType":"216","endLine":26,"endColumn":76},{"ruleId":"202","severity":1,"message":"230","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":11},{"ruleId":"231","severity":1,"message":"232","line":131,"column":10,"nodeType":"233","messageId":"234","endLine":131,"endColumn":11,"fix":"235"},{"ruleId":"231","severity":1,"message":"232","line":148,"column":27,"nodeType":"233","messageId":"234","endLine":148,"endColumn":28,"fix":"236"},{"ruleId":"202","severity":1,"message":"237","line":9,"column":18,"nodeType":"204","messageId":"205","endLine":9,"endColumn":23},{"ruleId":"202","severity":1,"message":"238","line":9,"column":35,"nodeType":"204","messageId":"205","endLine":9,"endColumn":43},{"ruleId":"231","severity":1,"message":"232","line":26,"column":10,"nodeType":"233","messageId":"234","endLine":26,"endColumn":11,"fix":"239"},{"ruleId":"240","severity":1,"message":"241","line":31,"column":14,"nodeType":"242","endLine":43,"endColumn":4},{"ruleId":"231","severity":1,"message":"232","line":36,"column":10,"nodeType":"233","messageId":"234","endLine":36,"endColumn":11,"fix":"243"},{"ruleId":"240","severity":1,"message":"244","line":43,"column":6,"nodeType":"245","endLine":43,"endColumn":13,"suggestions":"246"},{"ruleId":"247","severity":1,"message":"248","line":83,"column":36,"nodeType":"249","messageId":"250","endLine":83,"endColumn":37},{"ruleId":"251","severity":1,"message":"252","line":3,"column":1,"nodeType":"253","endLine":215,"endColumn":2},{"ruleId":"254","severity":1,"message":"255","line":8,"column":41,"nodeType":"256","messageId":"257","endLine":8,"endColumn":43},{"ruleId":"254","severity":1,"message":"255","line":9,"column":9,"nodeType":"256","messageId":"257","endLine":9,"endColumn":11},{"ruleId":"202","severity":1,"message":"238","line":94,"column":37,"nodeType":"204","messageId":"205","endLine":94,"endColumn":45},{"ruleId":"202","severity":1,"message":"258","line":95,"column":20,"nodeType":"204","messageId":"205","endLine":95,"endColumn":30},{"ruleId":"202","severity":1,"message":"259","line":95,"column":42,"nodeType":"204","messageId":"205","endLine":95,"endColumn":55},{"ruleId":"202","severity":1,"message":"260","line":96,"column":20,"nodeType":"204","messageId":"205","endLine":96,"endColumn":25},{"ruleId":"202","severity":1,"message":"261","line":96,"column":37,"nodeType":"204","messageId":"205","endLine":96,"endColumn":45},{"ruleId":"262","severity":1,"message":"263","line":160,"column":31,"nodeType":"264","messageId":"234","endLine":163,"endColumn":15,"fix":"265"},{"ruleId":"202","severity":1,"message":"213","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"237","line":8,"column":18,"nodeType":"204","messageId":"205","endLine":8,"endColumn":23},{"ruleId":"202","severity":1,"message":"238","line":8,"column":35,"nodeType":"204","messageId":"205","endLine":8,"endColumn":43},{"ruleId":"202","severity":1,"message":"259","line":9,"column":40,"nodeType":"204","messageId":"205","endLine":9,"endColumn":53},{"ruleId":"202","severity":1,"message":"261","line":10,"column":35,"nodeType":"204","messageId":"205","endLine":10,"endColumn":43},{"ruleId":"202","severity":1,"message":"266","line":11,"column":9,"nodeType":"204","messageId":"205","endLine":11,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":2,"column":1,"nodeType":"253","endLine":280,"endColumn":2},{"ruleId":"202","severity":1,"message":"267","line":45,"column":20,"nodeType":"204","messageId":"205","endLine":45,"endColumn":26},{"ruleId":"202","severity":1,"message":"268","line":46,"column":37,"nodeType":"204","messageId":"205","endLine":46,"endColumn":45},{"ruleId":"202","severity":1,"message":"269","line":47,"column":23,"nodeType":"204","messageId":"205","endLine":47,"endColumn":24},{"ruleId":"202","severity":1,"message":"237","line":108,"column":20,"nodeType":"204","messageId":"205","endLine":108,"endColumn":25},{"ruleId":"202","severity":1,"message":"238","line":108,"column":37,"nodeType":"204","messageId":"205","endLine":108,"endColumn":45},{"ruleId":"202","severity":1,"message":"258","line":109,"column":20,"nodeType":"204","messageId":"205","endLine":109,"endColumn":30},{"ruleId":"202","severity":1,"message":"259","line":109,"column":42,"nodeType":"204","messageId":"205","endLine":109,"endColumn":55},{"ruleId":"202","severity":1,"message":"260","line":110,"column":20,"nodeType":"204","messageId":"205","endLine":110,"endColumn":25},{"ruleId":"202","severity":1,"message":"261","line":110,"column":37,"nodeType":"204","messageId":"205","endLine":110,"endColumn":45},{"ruleId":"202","severity":1,"message":"268","line":112,"column":37,"nodeType":"204","messageId":"205","endLine":112,"endColumn":45},{"ruleId":"231","severity":1,"message":"232","line":118,"column":10,"nodeType":"233","messageId":"234","endLine":118,"endColumn":11,"fix":"270"},{"ruleId":"202","severity":1,"message":"268","line":129,"column":37,"nodeType":"204","messageId":"205","endLine":129,"endColumn":45},{"ruleId":"202","severity":1,"message":"269","line":131,"column":23,"nodeType":"204","messageId":"205","endLine":131,"endColumn":24},{"ruleId":"202","severity":1,"message":"271","line":131,"column":39,"nodeType":"204","messageId":"205","endLine":131,"endColumn":40},{"ruleId":"231","severity":1,"message":"232","line":157,"column":48,"nodeType":"233","messageId":"234","endLine":157,"endColumn":49,"fix":"272"},{"ruleId":"202","severity":1,"message":"259","line":177,"column":42,"nodeType":"204","messageId":"205","endLine":177,"endColumn":55},{"ruleId":"202","severity":1,"message":"260","line":178,"column":20,"nodeType":"204","messageId":"205","endLine":178,"endColumn":25},{"ruleId":"202","severity":1,"message":"261","line":178,"column":37,"nodeType":"204","messageId":"205","endLine":178,"endColumn":45},{"ruleId":"202","severity":1,"message":"266","line":179,"column":11,"nodeType":"204","messageId":"205","endLine":179,"endColumn":19},{"ruleId":"202","severity":1,"message":"237","line":191,"column":20,"nodeType":"204","messageId":"205","endLine":191,"endColumn":25},{"ruleId":"202","severity":1,"message":"238","line":191,"column":37,"nodeType":"204","messageId":"205","endLine":191,"endColumn":45},{"ruleId":"202","severity":1,"message":"260","line":193,"column":20,"nodeType":"204","messageId":"205","endLine":193,"endColumn":25},{"ruleId":"202","severity":1,"message":"261","line":193,"column":37,"nodeType":"204","messageId":"205","endLine":193,"endColumn":45},{"ruleId":"202","severity":1,"message":"266","line":194,"column":11,"nodeType":"204","messageId":"205","endLine":194,"endColumn":19},{"ruleId":"202","severity":1,"message":"229","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"229","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"229","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"261","line":9,"column":35,"nodeType":"204","messageId":"205","endLine":9,"endColumn":43},{"ruleId":"202","severity":1,"message":"268","line":10,"column":35,"nodeType":"204","messageId":"205","endLine":10,"endColumn":43},{"ruleId":"202","severity":1,"message":"269","line":11,"column":21,"nodeType":"204","messageId":"205","endLine":11,"endColumn":22},{"ruleId":"202","severity":1,"message":"271","line":11,"column":37,"nodeType":"204","messageId":"205","endLine":11,"endColumn":38},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'axios' is defined but never used.","'axiosRequest' is defined but never used.","'boards' is assigned a value but never used.","'setBoards' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'gitHubAccessToken' is assigned a value but never used.","'setGitHubAccessToken' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["275","276"],"no-control-regex","Unexpected control character(s) in regular expression: \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e, \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e.","unexpected",["277","278"],"'socialSignUp' is assigned a value but never used.","'useEffect' is defined but never used.","'App' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"279","text":"280"},{"range":"281","text":"280"},"'board' is assigned a value but never used.","'setBoard' is assigned a value but never used.",{"range":"282","text":"280"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",{"range":"283","text":"280"},"React Hook useEffect has missing dependencies: 'event.progress_id', 'newTaskId', 'progresses', and 'setProgresses'. Either include them or remove the dependency array.","ArrayExpression",["284"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'progresses' is assigned a value but never used.","'setProgresses' is assigned a value but never used.","'tasks' is assigned a value but never used.","'setTasks' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property 0.","MemberExpression",{"range":"285","text":"280"},"'progress' is assigned a value but never used.","'modals' is assigned a value but never used.","'setEvent' is assigned a value but never used.","'b' is assigned a value but never used.",{"range":"286","text":"280"},"'p' is assigned a value but never used.",{"range":"287","text":"280"},"no-global-assign","no-unsafe-negation",{"messageId":"288","fix":"289","desc":"290"},{"messageId":"291","fix":"292","desc":"293"},{"messageId":"288","fix":"294","desc":"290"},{"messageId":"291","fix":"295","desc":"293"},[3161,3162],"",[3605,3606],[857,858],[1125,1126],{"desc":"296","fix":"297"},[5453,5454],[3681,3682],[4853,4854],"removeEscape",{"range":"298","text":"280"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"299","text":"300"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"301","text":"280"},{"range":"302","text":"300"},"Update the dependencies array to be: [event.progress_id, newTaskId, progresses, setProgresses, tasks]",{"range":"303","text":"304"},[4959,4960],[4959,4959],"\\",[7021,7022],[7021,7021],[1296,1303],"[event.progress_id, newTaskId, progresses, setProgresses, tasks]"]